"""
Filter one of the name lists generated by mkayser, and pick out
only names whose score is above a given threshold.

Currently, there is no command-line interface; you must modify the 
constants at the top of this file and then run it.  (Todo: add a 
command-line interface.)
"""

import codecs, re, os

#######################################################
# INPUT PARAMETERS
#######################################################

LANGUAGE = 'Arabic'

# Source directory.  Should contain Names.TabSeperated.txt
SRC_DIR = "/nfs/traid04/u2/mkayser/tasks/NameList/"+LANGUAGE

# Destination file.
DST = LANGUAGE+"_Segment_NameList.txt"

# model score -- see PrecRecTable.txt in SRC_DIR to see
# how this relates to precision and recall.
CUTOFF = 0.9

# Names that contain more than this number of words are
# discarded.
LENGTH_CUTOFF = 10

#######################################################
# Script
#######################################################
out = codecs.open(DST, 'wb', 'utf-8')

SRC = os.path.join(SRC_DIR, "Names.TabSeparated.txt")
seen_names = set()
english_names = set()
for lineno, line in enumerate(codecs.open(SRC, 'rb', 'utf-8')):
    line = line.strip()
    if not line: continue

    foreign_name, english_name, score = line.split('\t')
    if score == 'Model Score': continue # header line
    if float(score) < CUTOFF: break # file is sorted by score.
    if foreign_name in seen_names: continue
    if len(english_name.replace('-',' ').split()) > LENGTH_CUTOFF: continue
    if re.search('[;?]', english_name): continue
    out.write('%s\t%s\n' % (foreign_name, english_name))
    seen_names.add(foreign_name)
    english_names.add(english_name)
    if len(seen_names) % 20000 == 0:
        print '%d names added so far (%d rejected)' % (
            len(seen_names), lineno-len(seen_names)-1)

print 'Total names added: %d' % len(seen_names)
for i in range(1, LENGTH_CUTOFF+1):
    num = sum(1 for name in english_names
              if len(name.replace('-', ' ').split()) == i)
    if num:
        print '%6d-word names: %8d' % (i, num)
out.close()
