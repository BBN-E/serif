// Copyright 2008 by BBN Technologies Corp.
// All Rights Reserved.

#include "Generic/common/leak_detection.h"

#include "Generic/parse/STags.h"
#include "English/parse/en_STags.h"

Symbol EnglishSTags::TOP = Symbol(L"TOP");
Symbol EnglishSTags::TOPTAG = Symbol(L"TOPTAG");
Symbol EnglishSTags::LRB = Symbol(L"-LRB-");
Symbol EnglishSTags::RRB = Symbol(L"-RRB-");
Symbol EnglishSTags::COMMA = Symbol(L",");
Symbol EnglishSTags::COLON = Symbol(L":");
Symbol EnglishSTags::DOT = Symbol(L".");
Symbol EnglishSTags::QMARK = Symbol(L"?");
Symbol EnglishSTags::EX_POINT = Symbol(L"!");
Symbol EnglishSTags::DASH = Symbol(L"--");
Symbol EnglishSTags::HYPHEN = Symbol(L"-");
Symbol EnglishSTags::SEMICOLON = Symbol(L";");
Symbol EnglishSTags::DOLLAR = Symbol(L"$");
Symbol EnglishSTags::POUND = Symbol(L"#");
Symbol EnglishSTags::QUOTE1 = Symbol(L"''");
Symbol EnglishSTags::QUOTE2 = Symbol(L"``");
Symbol EnglishSTags::ADJP = Symbol(L"ADJP");
Symbol EnglishSTags::ADVP = Symbol(L"ADVP");
Symbol EnglishSTags::CC = Symbol(L"CC");
Symbol EnglishSTags::CD = Symbol(L"CD");
Symbol EnglishSTags::CONJP = Symbol(L"CONJP");
Symbol EnglishSTags::DT = Symbol(L"DT");
Symbol EnglishSTags::DUMMY = Symbol(L"DUMMY");
Symbol EnglishSTags::FRAG = Symbol(L"FRAG");
Symbol EnglishSTags::FRAGMENTS = Symbol(L"FRAGMENTS");
Symbol EnglishSTags::EX = Symbol(L"EX");
Symbol EnglishSTags::FW = Symbol(L"FW");
Symbol EnglishSTags::IN = Symbol(L"IN");
Symbol EnglishSTags::INTJ = Symbol(L"INTJ");
Symbol EnglishSTags::JJ = Symbol(L"JJ");
Symbol EnglishSTags::JJR = Symbol(L"JJR");
Symbol EnglishSTags::JJS = Symbol(L"JJS");
Symbol EnglishSTags::LS = Symbol(L"LS");
Symbol EnglishSTags::LST = Symbol(L"LST");
Symbol EnglishSTags::MD = Symbol(L"MD");
Symbol EnglishSTags::NAC = Symbol(L"NAC");
Symbol EnglishSTags::NCD = Symbol(L"NCD");
Symbol EnglishSTags::NN = Symbol(L"NN");
Symbol EnglishSTags::NNP = Symbol(L"NNP");
Symbol EnglishSTags::NNPS = Symbol(L"NNPS");
Symbol EnglishSTags::NNS = Symbol(L"NNS");
Symbol EnglishSTags::NP = Symbol(L"NP");
Symbol EnglishSTags::NPA = Symbol(L"NPA");
Symbol EnglishSTags::NPP = Symbol(L"NPP");
Symbol EnglishSTags::NPPOS = Symbol(L"NPPOS");
Symbol EnglishSTags::NPPRO = Symbol(L"NPPRO");
Symbol EnglishSTags::NX = Symbol(L"NX");
Symbol EnglishSTags::POS = Symbol(L"POS");
Symbol EnglishSTags::PP = Symbol(L"PP");
Symbol EnglishSTags::PRN = Symbol(L"PRN");
Symbol EnglishSTags::PRP = Symbol(L"PRP");
Symbol EnglishSTags::PRPS = Symbol(L"PRP$");
Symbol EnglishSTags::PRT = Symbol(L"PRT");
Symbol EnglishSTags::QP = Symbol(L"QP");
Symbol EnglishSTags::RB = Symbol(L"RB");
Symbol EnglishSTags::RP = Symbol(L"RP");
Symbol EnglishSTags::RBR = Symbol(L"RBR");
Symbol EnglishSTags::RBS = Symbol(L"RBS");
Symbol EnglishSTags::RRC = Symbol(L"RRC");
Symbol EnglishSTags::S = Symbol(L"S");
Symbol EnglishSTags::SBAR = Symbol(L"SBAR");
Symbol EnglishSTags::SBARQ = Symbol(L"SBARQ");
Symbol EnglishSTags::SINV = Symbol(L"SINV");
Symbol EnglishSTags::SQ = Symbol(L"SQ");
Symbol EnglishSTags::SYM = Symbol(L"SYM");
Symbol EnglishSTags::TO = Symbol(L"TO");
Symbol EnglishSTags::UCP = Symbol(L"UCP");
Symbol EnglishSTags::VB = Symbol(L"VB");
Symbol EnglishSTags::VBD = Symbol(L"VBD");
Symbol EnglishSTags::VBG = Symbol(L"VBG");
Symbol EnglishSTags::VBN = Symbol(L"VBN");
Symbol EnglishSTags::VBP = Symbol(L"VBP");
Symbol EnglishSTags::VBZ = Symbol(L"VBZ");
Symbol EnglishSTags::VP = Symbol(L"VP");
Symbol EnglishSTags::WDT = Symbol(L"WDT");
Symbol EnglishSTags::WHADJP = Symbol(L"WHADJP");
Symbol EnglishSTags::WHADVP = Symbol(L"WHADVP");
Symbol EnglishSTags::WHNP = Symbol(L"WHNP");
Symbol EnglishSTags::WHPP = Symbol(L"WHPP");
Symbol EnglishSTags::WP = Symbol(L"WP");
Symbol EnglishSTags::WPDOLLAR = Symbol(L"WP$");
Symbol EnglishSTags::WRB = Symbol(L"WRB");
Symbol EnglishSTags::X = Symbol(L"X");
Symbol EnglishSTags::DATE = Symbol(L"DATE");

//These Labels are only used by the trainer mrf
Symbol EnglishSTags::LOCATION_NNP = Symbol(L"LOCATION-NNP");
Symbol EnglishSTags::PERSON_NNP= Symbol(L"PERSON-NNP");
Symbol EnglishSTags::ORGANIZATION_NNP= Symbol(L"ORGANIZATION-NNP");
Symbol EnglishSTags::PERCENT_NNP= Symbol(L"PERCENT-NNP");
Symbol EnglishSTags::TIME_NNP= Symbol(L"TIME-NNP");
Symbol EnglishSTags::DATE_NNP= Symbol(L"DATE-NNP");
Symbol EnglishSTags::MONEY_NNP = Symbol(L"MONEY-NNP");
Symbol EnglishSTags::LOCATION_NNPS = Symbol(L"LOCATION-NNPS");
Symbol EnglishSTags::PERSON_NNPS = Symbol(L"PERSON-NNPS");
Symbol EnglishSTags::ORGANIZATION_NNPS = Symbol(L"ORGANIZATION-NNPS");
Symbol EnglishSTags::PERCENT_NNPS = Symbol(L"PERCENT-NNPS");
Symbol EnglishSTags::TIME_NNPS = Symbol(L"TIME-NNPS");
Symbol EnglishSTags::DATE_NNPS = Symbol(L"DATE-NNPS");
Symbol EnglishSTags::MONEY_NNPS = Symbol(L"MONEY-NNPS");
Symbol EnglishSTags::NPP_NNP = Symbol(L"NPP-NNP");
Symbol EnglishSTags::NPP_NNPS= Symbol(L"NPP-NNPS");
Symbol EnglishSTags::PERSON = Symbol(L"PERSON");
Symbol EnglishSTags::ORGANIZATION = Symbol(L"ORGANIZATION");
Symbol EnglishSTags::LOCATION = Symbol(L"LOCATION");
Symbol EnglishSTags::PDT = Symbol(L"PDT");
Symbol EnglishSTags::UH = Symbol(L"UH");


void EnglishSTags::initializeTagList(std::vector<Symbol> tags) {
	tags.push_back(TOP);
	tags.push_back(TOPTAG);
	tags.push_back(LRB);
	tags.push_back(RRB);
	tags.push_back(COMMA);
	tags.push_back(COLON);
	tags.push_back(DOT);
	tags.push_back(QMARK);
	tags.push_back(EX_POINT);
	tags.push_back(DASH);
	tags.push_back(HYPHEN);
	tags.push_back(SEMICOLON);
	tags.push_back(DOLLAR);
	tags.push_back(POUND);
	tags.push_back(QUOTE1);
	tags.push_back(QUOTE2);
	tags.push_back(ADJP);
	tags.push_back(ADVP);
	tags.push_back(CC);
	tags.push_back(CD);
	tags.push_back(CONJP);
	tags.push_back(DT);
	tags.push_back(DUMMY);
	tags.push_back(FRAG);
	tags.push_back(FRAGMENTS);
	tags.push_back(EX);
	tags.push_back(FW);
	tags.push_back(IN);
	tags.push_back(INTJ);
	tags.push_back(JJ);
	tags.push_back(JJR);
	tags.push_back(JJS);
	tags.push_back(LS);
	tags.push_back(LST);
	tags.push_back(MD);
	tags.push_back(NAC);
	tags.push_back(NCD);
	tags.push_back(NN);
	tags.push_back(NNP);
	tags.push_back(NNPS);
	tags.push_back(NNS);
	tags.push_back(NP);
	tags.push_back(NPA);
	tags.push_back(NPP);
	tags.push_back(NPPOS);
	tags.push_back(NPPRO);
	tags.push_back(NX);
	tags.push_back(POS);
	tags.push_back(PP);
	tags.push_back(PRN);
	tags.push_back(PRP);
	tags.push_back(PRPS);
	tags.push_back(PRT);
	tags.push_back(QP);
	tags.push_back(RB);
	tags.push_back(RP);
	tags.push_back(RBR);
	tags.push_back(RBS);
	tags.push_back(RRC);
	tags.push_back(S);
	tags.push_back(SBAR);
	tags.push_back(SBARQ);
	tags.push_back(SINV);
	tags.push_back(SQ);
	tags.push_back(SYM);
	tags.push_back(TO);
	tags.push_back(UCP);
	tags.push_back(VB);
	tags.push_back(VBD);
	tags.push_back(VBG);
	tags.push_back(VBN);
	tags.push_back(VBP);
	tags.push_back(VBZ);
	tags.push_back(VP);
	tags.push_back(WDT);
	tags.push_back(WHADJP);
	tags.push_back(WHADVP);
	tags.push_back(WHNP);
	tags.push_back(WHPP);
	tags.push_back(WP);
	tags.push_back(WPDOLLAR);
	tags.push_back(WRB);
	tags.push_back(X);
	tags.push_back(DATE);

	tags.push_back(LOCATION_NNP);
	tags.push_back(PERSON_NNP);
	tags.push_back(ORGANIZATION_NNP);
	tags.push_back(PERCENT_NNP);
	tags.push_back(TIME_NNP);
	tags.push_back(DATE_NNP);
	tags.push_back(MONEY_NNP);
	tags.push_back(LOCATION_NNPS);
	tags.push_back(PERSON_NNPS);
	tags.push_back(ORGANIZATION_NNPS);
	tags.push_back(PERCENT_NNPS);
	tags.push_back(TIME_NNPS);
	tags.push_back(DATE_NNPS);
	tags.push_back(MONEY_NNPS);
	tags.push_back(NPP_NNP);
	tags.push_back(NPP_NNPS);
	tags.push_back(PERSON);
	tags.push_back(ORGANIZATION);
	tags.push_back(LOCATION);
	tags.push_back(PDT);
	tags.push_back(UH);
}
