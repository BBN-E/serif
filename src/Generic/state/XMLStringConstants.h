// Copyright 2010 by BBN Technologies Corp.
// All Rights Reserved.

// This file defines XML string constants that are used during XML serialization.
// They should be kept in alphabetical order, to avoid confusion.
//
// This file should never be #include-ed directly.  Instead, it is included by
// both XMLStrings.h (after defining DECLARE_XML_STR to declare an extern string)  
// and XMLStrings.cpp (after defining DECLARE_XML_STR to *define* a string).

#ifndef DECLARE_XML_STR
#error "This file should only be included by XMLStrings.h and XMLStrings.cpp"
#endif

DECLARE_XML_STR(actor_agent_pattern);
DECLARE_XML_STR(actor_id);
DECLARE_XML_STR(actor_uid);
DECLARE_XML_STR(actor_db_name);
DECLARE_XML_STR(actor_mention_ids);
DECLARE_XML_STR(actor_mention_set_id);
DECLARE_XML_STR(actor_code);
DECLARE_XML_STR(actor_name);
DECLARE_XML_STR(country_info_actor_code);
DECLARE_XML_STR(actor_pattern_uid);
DECLARE_XML_STR(ActorEntity);
DECLARE_XML_STR(ActorEntitySet);
DECLARE_XML_STR(ActorMention);
DECLARE_XML_STR(ActorMentionTheory);
DECLARE_XML_STR(ActorMentionSet);
DECLARE_XML_STR(adjusted_score);
DECLARE_XML_STR(adverb_id);
DECLARE_XML_STR(agent_mention_id);
DECLARE_XML_STR(agent_name);
DECLARE_XML_STR(agent_sym);
DECLARE_XML_STR(AlternatePOS);
DECLARE_XML_STR(analysis);
DECLARE_XML_STR(anchor_node_id);
DECLARE_XML_STR(anchor_prop_id);
DECLARE_XML_STR(annotation_id);
DECLARE_XML_STR2(ANNOTATION_TYPE, "annotation-type");
DECLARE_XML_STR(AnswerType);
DECLARE_XML_STR(answer_role);
DECLARE_XML_STR(aquaintance_mention_id);
DECLARE_XML_STR(Arabic);
DECLARE_XML_STR(Argument);
DECLARE_XML_STR2(ARG_START, "arg-start");
DECLARE_XML_STR2(ARG_END, "arg-end");
DECLARE_XML_STR2(ARG_NUM, "arg-num");
DECLARE_XML_STR2(ARG_TYPE, "arg-type");
DECLARE_XML_STR2(ARG_VALUE, "arg-value");
DECLARE_XML_STR(asr_time);
DECLARE_XML_STR(asr_times);
DECLARE_XML_STR(ASRTimes);
DECLARE_XML_STR(ASRTime);
DECLARE_XML_STR(ASRTimeRange);
DECLARE_XML_STR(asserted);
DECLARE_XML_STR(association_score);
DECLARE_XML_STR2(ASTERISK, "*");
DECLARE_XML_STR(Attribute);
DECLARE_XML_STR2(BBN_ENTITY_SPEC, "bbn-entity-spec");
DECLARE_XML_STR2(BBN_EVENTS, "bbn-events");
DECLARE_XML_STR2(BBN_EVENTREL_SPEC, "bbn-eventrel-spec");
DECLARE_XML_STR2(BBN_FREETEXT, "bbn-freetext");
DECLARE_XML_STR2(BBN_KEYWORD, "bbn-keyword");
DECLARE_XML_STR2(BBN_KEYWORDS, "bbn-keywords");
DECLARE_XML_STR2(BBN_KEYWORD_TYPE, "bbn-keyword-type");
DECLARE_XML_STR2(BBN_RELATIONS, "bbn-relations");
DECLARE_XML_STR2(BBN_ROLE, "bbn-role");
DECLARE_XML_STR2(BBN_ROLE_CONSTRAINTS_E1, "bbn-role-constraints-e1");
DECLARE_XML_STR2(BBN_ROLE_CONSTRAINTS_E2, "bbn-role-constraints-e2");
DECLARE_XML_STR(beam_width);
DECLARE_XML_STR(best_sentence_index);
DECLARE_XML_STR(byte_offset);
DECLARE_XML_STR(byte_offsets);
DECLARE_XML_STR(ByteOffsets);
DECLARE_XML_STR(ByteOffset);
DECLARE_XML_STR(ByteOffsetRange);
DECLARE_XML_STR(canonical_name);
DECLARE_XML_STR(canonical_name_mention_id);
DECLARE_XML_STR(canonical_name_transliteration);
DECLARE_XML_STR2(CARRIAGE_RETURN, "\r");
DECLARE_XML_STR2(CARRIAGE_RETURN_REF, "#xD");
DECLARE_XML_STR(category);
DECLARE_XML_STR(char_offset);
DECLARE_XML_STR(char_offsets);
DECLARE_XML_STR(CharOffsets);
DECLARE_XML_STR(CharOffset);
DECLARE_XML_STR(CharOffsetRange);
DECLARE_XML_STR(child);
DECLARE_XML_STR(Chinese);
DECLARE_XML_STR2(COLON, ":");
DECLARE_XML_STR(condensed_offsets);
DECLARE_XML_STR(confidence);
DECLARE_XML_STR(feature_language);
DECLARE_XML_STR(feature_variant);
DECLARE_XML_STR(Contents);
DECLARE_XML_STR(Core);
DECLARE_XML_STR(CoveredPropNodePFeature);
DECLARE_XML_STR(country_id);
DECLARE_XML_STR(country_info_actor_id);
DECLARE_XML_STR2(DASH, "-");
DECLARE_XML_STR(DateSpecReturnPFeature);
DECLARE_XML_STR(DateTime);
DECLARE_XML_STR2(DATE_DEMOTION, "date-demotion");
DECLARE_XML_STR(db_score);
DECLARE_XML_STR(debug_info);
DECLARE_XML_STR(DefaultCountryActor);
DECLARE_XML_STR(DependencyParse);
DECLARE_XML_STR(DepNode);
DECLARE_XML_STR(desc_score);
DECLARE_XML_STR(DFS);
DECLARE_XML_STR(display_name);
DECLARE_XML_STR(display_type);
DECLARE_XML_STR(doc);
DECLARE_XML_STR(doc_rank);
DECLARE_XML_STR(doc_type);
DECLARE_XML_STR(docid);
DECLARE_XML_STR(Document);
DECLARE_XML_STR(DocumentActorInfo);
DECLARE_XML_STR(DocumentDateReturnPFeature);
DECLARE_XML_STR(DocumentPFeature);
DECLARE_XML_STR(document);
DECLARE_XML_STR(document_date);
DECLARE_XML_STR(documents);
DECLARE_XML_STR2(DOCUMENT_ID, "document-id");
DECLARE_XML_STR(document_predicate);
DECLARE_XML_STR(document_time_start);
DECLARE_XML_STR(document_time_end);
DECLARE_XML_STR2(DOT, ".");
DECLARE_XML_STR(edit_distance_score);
DECLARE_XML_STR(edt_offset);
DECLARE_XML_STR(edt_offsets);
DECLARE_XML_STR(EDTOffsets);
DECLARE_XML_STR(EDTOffset);
DECLARE_XML_STR(EDTOffsetRange);
//DECLARE_XML_STR(end_offset); <-- Always specify char or edt!
DECLARE_XML_STR(end_byte);
DECLARE_XML_STR(end_char);
DECLARE_XML_STR(end_edt);
DECLARE_XML_STR(end_pos);
DECLARE_XML_STR(end_stage);
DECLARE_XML_STR(end_time);
DECLARE_XML_STR(end_token);
DECLARE_XML_STR(English);
DECLARE_XML_STR(Entity);
DECLARE_XML_STR(entity_guid);
DECLARE_XML_STR(entity_id);
DECLARE_XML_STR(entity_subtype);
DECLARE_XML_STR(entity_type);
DECLARE_XML_STR(EntitySet);
DECLARE_XML_STR(Entry);
DECLARE_XML_STR(EquivalentName);
DECLARE_XML_STR(EquivalentNames);
DECLARE_XML_STR2(EQUIVALENT_TERMS, "equivalent-terms");
DECLARE_XML_STR(Event);
DECLARE_XML_STR(EventArg);
DECLARE_XML_STR(event_id);
DECLARE_XML_STR(event_mention_id);
DECLARE_XML_STR(event_mention_ids);
DECLARE_XML_STR(event_mention_set_id);
DECLARE_XML_STR(event_type);
DECLARE_XML_STR(EventMention);
DECLARE_XML_STR(EventMentionArg);
DECLARE_XML_STR(EventMentionPFeature);
DECLARE_XML_STR(EventMentionReturnPFeature);
//DECLARE_XML_STR(EventMentionRef);
DECLARE_XML_STR(EventMentionSet);
DECLARE_XML_STR(EventSet);
DECLARE_XML_STR(ExactMatchPFeature);
DECLARE_XML_STR(external_original_text);
DECLARE_XML_STR(extractor_name);
DECLARE_XML_STR(Fact);
DECLARE_XML_STR(fact);
DECLARE_XML_STR(fact_type);
DECLARE_XML_STR(FactArgument);
DECLARE_XML_STR(FactSet);
DECLARE_XML_STR(FactEntry);
DECLARE_XML_STR(FALSE);
DECLARE_XML_STR(Farsi);
DECLARE_XML_STR(FeatureValueStructure);
DECLARE_XML_STR(Field);
//DECLARE_XML_STR(FullParse); -- just use Parse
DECLARE_XML_STR(focus);
DECLARE_XML_STR(focus_role);
DECLARE_XML_STR(focus_type);
DECLARE_XML_STR(formatted_date);
DECLARE_XML_STR(future);
DECLARE_XML_STR(generic);
DECLARE_XML_STR(genericity);
DECLARE_XML_STR(GenericPFeature);
DECLARE_XML_STR(GenericReturnPFeature);
DECLARE_XML_STR(geo_country);
DECLARE_XML_STR(geo_latitude);
DECLARE_XML_STR(geo_longitude);
DECLARE_XML_STR(geo_text);
DECLARE_XML_STR(geo_uid);
DECLARE_XML_STR(georesolution_score);
DECLARE_XML_STR(gloss);
DECLARE_XML_STR(head_id);
DECLARE_XML_STR(hierarchical_ids);
DECLARE_XML_STR(href);
DECLARE_XML_STR(hypothesis_type);
DECLARE_XML_STR(ICEWSEventMentionSet);
DECLARE_XML_STR(id);
DECLARE_XML_STR2(IDENTIFIER_PREFIX, "a"); // XML id attributes may not be bare numbers.
DECLARE_XML_STR(idf_type);
DECLARE_XML_STR(idf_role);
DECLARE_XML_STR(implicit_tokens);
DECLARE_XML_STR(importance_score);
DECLARE_XML_STR(include_asr_times);
DECLARE_XML_STR(include_byte_offsets);
DECLARE_XML_STR(include_canonical_names);
DECLARE_XML_STR(include_char_offsets);
DECLARE_XML_STR(include_edt_offsets);
DECLARE_XML_STR(include_mentions_as_comments);
DECLARE_XML_STR(include_spans_as_elements);
DECLARE_XML_STR(include_spans_as_comments);
DECLARE_XML_STR(include_mention_transliterations);
DECLARE_XML_STR(include_mention_confidences);
DECLARE_XML_STR(include_name_transliterations);
DECLARE_XML_STR(input_type);
DECLARE_XML_STR(intended_type);
DECLARE_XML_STR(is_acronym);
DECLARE_XML_STR(is_analyzed);
DECLARE_XML_STR(is_annotated);
DECLARE_XML_STR(is_binary_relation);
DECLARE_XML_STR(is_default_parse);
DECLARE_XML_STR(is_doc_date);
DECLARE_XML_STR(is_downcased);
DECLARE_XML_STR(is_family);
DECLARE_XML_STR(is_focus);
DECLARE_XML_STR(is_generic);
DECLARE_XML_STR(is_head);
DECLARE_XML_STR(is_infobox);
DECLARE_XML_STR(is_location);
DECLARE_XML_STR(is_metonymy);
DECLARE_XML_STR(is_person);
DECLARE_XML_STR(is_receiver);
DECLARE_XML_STR(is_reciprocal);
DECLARE_XML_STR(is_speaker);
DECLARE_XML_STR(iso_code);
DECLARE_XML_STR(kb_fact_type);
DECLARE_XML_STR(kb_source);
DECLARE_XML_STR(key);
DECLARE_XML_STR(language);
DECLARE_XML_STR2(LANGUAGE_TYPE, "language-type");
DECLARE_XML_STR(left_entity_id);
DECLARE_XML_STR(left_mention_id);
DECLARE_XML_STR(lexical_entries);
DECLARE_XML_STR(LexicalEntry);
DECLARE_XML_STR(Lexicon);
DECLARE_XML_STR(link_confidence);
DECLARE_XML_STR(loc);
DECLARE_XML_STR(location);
DECLARE_XML_STR(LocatedString);
DECLARE_XML_STR(lower_case);
DECLARE_XML_STR(mapped_type);
DECLARE_XML_STR(mapped_subtype);
DECLARE_XML_STR(match_sym);
DECLARE_XML_STR(match_type);
DECLARE_XML_STR(matcher_index);
DECLARE_XML_STR(matcher_total);
DECLARE_XML_STR(max_offset);
DECLARE_XML_STR(max_hypotheses);
DECLARE_XML_STR(max_hypotheses_if_cutoff);
DECLARE_XML_STR(Mention);
DECLARE_XML_STR(mention_confidences);
DECLARE_XML_STR(mention_id);
DECLARE_XML_STR(mention_ids);
DECLARE_XML_STR(mention_set_id);
DECLARE_XML_STR(mention_type);
DECLARE_XML_STR(MentionFactArgument);
DECLARE_XML_STR(MentionPFeature);
DECLARE_XML_STR(MentionReturnPFeature);
//DECLARE_XML_STR(MentionRef);
DECLARE_XML_STR(MentionSet);
DECLARE_XML_STR(Metadata);
DECLARE_XML_STR(min_facts_ratio);
DECLARE_XML_STR(min_offset);
DECLARE_XML_STR(modal_id);
DECLARE_XML_STR(modality);
DECLARE_XML_STR(MutualAcquaintPFeature);
DECLARE_XML_STR(name);
DECLARE_XML_STR(Name);
DECLARE_XML_STR(name_score);
DECLARE_XML_STR(NameTheory);
DECLARE_XML_STR(name_theory_id);
DECLARE_XML_STR(negation_id);
DECLARE_XML_STR(negative);
DECLARE_XML_STR(NestedName);
DECLARE_XML_STR(NestedNameTheory);
DECLARE_XML_STR(nested_name_theory_id);
DECLARE_XML_STR(next);
DECLARE_XML_STR(no);
DECLARE_XML_STR(node_id);
DECLARE_XML_STR(node_id_method);
DECLARE_XML_STR(NPChunk);
DECLARE_XML_STR(NPChunkTheory);
DECLARE_XML_STR(np_chunk_theory_id);
DECLARE_XML_STR(dependency_parse_id);
DECLARE_XML_STR(NULL);
// Never use just 'offset' <-- Always specify char or edt!
//DECLARE_XML_STR(offset);
//DECLARE_XML_STR(Offset);
//DECLARE_XML_STR(OffsetRange);
//DECLARE_XML_STR(offsets);
//DECLARE_XML_STR(Offsets);
DECLARE_XML_STR(OffsetSpan);
DECLARE_XML_STR(offset_type);
DECLARE_XML_STR(original_token_index);
DECLARE_XML_STR(originalEventId);
DECLARE_XML_STR(OriginalText);
DECLARE_XML_STR(OriginalToken);
DECLARE_XML_STR(original_type);
DECLARE_XML_STR(other);
DECLARE_XML_STR(other_roles);
DECLARE_XML_STR(output_format);
DECLARE_XML_STR(output_flag);
DECLARE_XML_STR(paired_actor_code);
DECLARE_XML_STR(paired_actor_name);
DECLARE_XML_STR(paired_actor_pattern_uid);
DECLARE_XML_STR(paired_actor_uid);
DECLARE_XML_STR(paired_actor_requires_context);
DECLARE_XML_STR(paired_actor_is_acronym);
DECLARE_XML_STR(paired_agent_code);
DECLARE_XML_STR(paired_agent_name);
DECLARE_XML_STR(paired_agent_pattern_uid);
DECLARE_XML_STR(paired_agent_uid);
DECLARE_XML_STR(parent);
DECLARE_XML_STR(parent_id);
DECLARE_XML_STR(Parse);
DECLARE_XML_STR(parse_encoding);
DECLARE_XML_STR(parseid);
DECLARE_XML_STR(parse_id);
DECLARE_XML_STR(PartOfSpeechSequence);
DECLARE_XML_STR(part_of_speech_sequence_id);
DECLARE_XML_STR(particle_id);
DECLARE_XML_STR(past);
DECLARE_XML_STR(pattern_confidence_score);
DECLARE_XML_STR(PatternFeatureSet);
DECLARE_XML_STR(PatternMatch);
DECLARE_XML_STR(pattern_match_find_seeds);
DECLARE_XML_STR(pattern_match_pattern);
DECLARE_XML_STR(pattern_match_score);
DECLARE_XML_STR(PatternReturn);
DECLARE_XML_STR(pattern_id);
DECLARE_XML_STR(indicator);
DECLARE_XML_STR(gainLoss);
DECLARE_XML_STR(pattern_label);
DECLARE_XML_STR(pattern_set_name);
DECLARE_XML_STR(persistent_session);
DECLARE_XML_STR(pnode_sentence_number);
DECLARE_XML_STR(pnode_start_token);
DECLARE_XML_STR(pnode_end_token);
DECLARE_XML_STR(polarity);
DECLARE_XML_STR(pos);
DECLARE_XML_STR(POS);
DECLARE_XML_STR(positive);
DECLARE_XML_STR(predicate);
DECLARE_XML_STR(present);
DECLARE_XML_STR(primary_parse);
DECLARE_XML_STR(prob);
DECLARE_XML_STR(ProcessDocument);
DECLARE_XML_STR(Proposition);
DECLARE_XML_STR(proposition_id);
DECLARE_XML_STR(PropositionReturnPFeature);
DECLARE_XML_STR(PropositionSet);
DECLARE_XML_STR(proposition_set_id);
DECLARE_XML_STR(PropPFeature);
DECLARE_XML_STR(QuestionAnalysis);
DECLARE_XML_STR(QuestionText);
DECLARE_XML_STR(QuotePFeature);
DECLARE_XML_STR(query);
DECLARE_XML_STR2(QUERY_ARG, "query-arg");
DECLARE_XML_STR2(QUERY_DATE, "query-date");
DECLARE_XML_STR2(QUERY_ID, "query-id");
DECLARE_XML_STR2(OLD_QUERY_ID, "old-query-id");
DECLARE_XML_STR2(QUERY_TEXT, "query-text");
DECLARE_XML_STR(query_predicate);
DECLARE_XML_STR(query_slot);
DECLARE_XML_STR(rank);
DECLARE_XML_STR(raw_score);
DECLARE_XML_STR(raw_type);
DECLARE_XML_STR(Region);
DECLARE_XML_STR(Zone);
DECLARE_XML_STR(region_id);
DECLARE_XML_STR(zone_id);
DECLARE_XML_STR(Regions);
DECLARE_XML_STR(Zones);
DECLARE_XML_STR(Zoning);
DECLARE_XML_STR(RegionSpan);
DECLARE_XML_STR(region_type);
DECLARE_XML_STR(zone_type);
DECLARE_XML_STR(rel_mention_id);
DECLARE_XML_STR(rel_mention_ids);
DECLARE_XML_STR(RelatedWordPFeature);
DECLARE_XML_STR(Relation);
DECLARE_XML_STR(RelationSet);
DECLARE_XML_STR(RelMention);
DECLARE_XML_STR(RelMentionPFeature);
DECLARE_XML_STR(RelMentionReturnPFeature);
//DECLARE_XML_STR(RelMentionRef);
DECLARE_XML_STR(RelMentionSet);
DECLARE_XML_STR(rel_mention_set_id);
DECLARE_XML_STR2(RELATED_WORDS, "related-words");
DECLARE_XML_STR(relevance_score);
DECLARE_XML_STR(requires_context);
DECLARE_XML_STR(response);
DECLARE_XML_STR(return_label);
DECLARE_XML_STR(return_values_map);
DECLARE_XML_STR(right_entity_id);
DECLARE_XML_STR(right_mention_id);
DECLARE_XML_STR(role);
DECLARE_XML_STR(role_type);
DECLARE_XML_STR(score);
DECLARE_XML_STR(score_group);
DECLARE_XML_STR(secondary_fact_type);
DECLARE_XML_STR(Segment);
DECLARE_XML_STR(Segments);
DECLARE_XML_STR(Sentence);
DECLARE_XML_STR(sentence_number);
DECLARE_XML_STR(sentence_theory_id);
DECLARE_XML_STR(Sentences);
DECLARE_XML_STR(SentenceTheory);
DECLARE_XML_STR(sent_no);
DECLARE_XML_STR(SerifXML);
DECLARE_XML_STR(SerifXMLRequest);
DECLARE_XML_STR2(SERIF_START_SENTENCE, "SERIF-start-sentence");
DECLARE_XML_STR2(SERIF_END_SENTENCE, "SERIF-end-sentence");
DECLARE_XML_STR(SingleLanguage);
DECLARE_XML_STR(Slot);
DECLARE_XML_STR(slot);
DECLARE_XML_STR(slot_weights);
DECLARE_XML_STR(SlotSentence);
DECLARE_XML_STR(slot1_start_offset);
DECLARE_XML_STR(slot2_start_offset);
DECLARE_XML_STR(slot3_start_offset);
DECLARE_XML_STR2(SLOT_START_TOKEN, "slot-start-token");
DECLARE_XML_STR(snippet);
DECLARE_XML_STR(snippets);
DECLARE_XML_STR2(SNIPPET_ID, "snippet-id");
DECLARE_XML_STR(sort_order);
DECLARE_XML_STR(source);
DECLARE_XML_STR(source_note);
DECLARE_XML_STR(source_type);
DECLARE_XML_STR2(SPACE, " ");
DECLARE_XML_STR(Span);
DECLARE_XML_STR(span_id);
DECLARE_XML_STR(span_type);
DECLARE_XML_STR(speaker);
DECLARE_XML_STR(speaker_mention_id);
DECLARE_XML_STR(SpeakerQuotation);
DECLARE_XML_STR(SpeakerQuotationSet);
DECLARE_XML_STR(specific);
DECLARE_XML_STR(spec_string);
DECLARE_XML_STR2(SPEC_TYPE, "spec-type");
DECLARE_XML_STR(session_id);
//DECLARE_XML_STR(start_offset); <-- Always specify char or edt!
DECLARE_XML_STR(start_byte);
DECLARE_XML_STR(start_char);
DECLARE_XML_STR(start_edt);
DECLARE_XML_STR(start_pos);
DECLARE_XML_STR(start_sentence);
DECLARE_XML_STR(end_sentence);
DECLARE_XML_STR2(START_DATE, "start-date");
DECLARE_XML_STR2(END_DATE, "end-date");
DECLARE_XML_STR2(START_OFFSET, "start-offset");
DECLARE_XML_STR2(END_OFFSET, "end-offset");
DECLARE_XML_STR(start_stage);
DECLARE_XML_STR(start_time);
DECLARE_XML_STR(start_token);
DECLARE_XML_STR(status);
DECLARE_XML_STR(string);
DECLARE_XML_STR(StringFactArgument);
DECLARE_XML_STR(SynNode);
DECLARE_XML_STR(syn_node_id);
DECLARE_XML_STR(tag);
DECLARE_XML_STR(target_profile);
DECLARE_XML_STR2(TEMPLATE_NUMBER, "template-number");
DECLARE_XML_STR(tense);
DECLARE_XML_STR(term);
DECLARE_XML_STR(text);
DECLARE_XML_STR(TextSpanFactArgument);
DECLARE_XML_STR(tf_idf_score);
DECLARE_XML_STR(time_arg_id);
DECLARE_XML_STR(time_arg_role);
DECLARE_XML_STR(time_arg_score);
DECLARE_XML_STR(timex_anchor_dir);
DECLARE_XML_STR(timex_anchor_val);
DECLARE_XML_STR(timex_mod);
DECLARE_XML_STR(timex_non_specific);
DECLARE_XML_STR(timex_set);
DECLARE_XML_STR(timex_val);
DECLARE_XML_STR(TemplateNumber);
DECLARE_XML_STR(Token);
DECLARE_XML_STR(token_id);
DECLARE_XML_STR(TokenSequence);
DECLARE_XML_STR(TokenSpanPFeature);
DECLARE_XML_STR(TokenSpanReturnPFeature);
DECLARE_XML_STR(token_sequence_id);
DECLARE_XML_STR(TopicPFeature);
DECLARE_XML_STR(TopicReturnPFeature);
DECLARE_XML_STR(toplevel);
DECLARE_XML_STR(TopLevelPFeature);
DECLARE_XML_STR(transliteration);
DECLARE_XML_STR(TreebankString);
DECLARE_XML_STR(TRUE);
DECLARE_XML_STR(type);
DECLARE_XML_STR2(UNDERSCORE, "_");
DECLARE_XML_STR(unique_id);
DECLARE_XML_STR(Unspecified);
DECLARE_XML_STR(unspecified);
DECLARE_XML_STR(UTCoref);
DECLARE_XML_STR(use_spokespeople);
DECLARE_XML_STR2(UTF8, "UTF-8");
DECLARE_XML_STR(val);
DECLARE_XML_STR(Value);
DECLARE_XML_STR(ValueMention);
DECLARE_XML_STR(ValueMentionFactArgument);
DECLARE_XML_STR(ValueMentionPFeature);
DECLARE_XML_STR(ValueMentionReturnPFeature);
DECLARE_XML_STR(ValueMentionSet);
DECLARE_XML_STR(value_id);
DECLARE_XML_STR(value_mention_id);
DECLARE_XML_STR(value_mention_1_id);
DECLARE_XML_STR(value_mention_2_id);
DECLARE_XML_STR(value_mention_ref);
DECLARE_XML_STR(value_mention_set_id);
DECLARE_XML_STR(ValueSet);
DECLARE_XML_STR(value_type);
DECLARE_XML_STR(verbose_ids);
DECLARE_XML_STR(version);
DECLARE_XML_STR(voweled_string);
DECLARE_XML_STR(weight);
DECLARE_XML_STR2(WHITESPACE, " \n\t\r");
DECLARE_XML_STR(LocatedZoneAttribute);
DECLARE_XML_STR(value);
DECLARE_XML_STR(author);
DECLARE_XML_STR(datetime);
